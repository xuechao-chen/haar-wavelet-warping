#version 430
layout (local_size_x =256,local_size_y =1,local_size_z=1) in;

struct ChildRegion
{
	float XMinBorder;
	float XMaxBorder;
	float YMaxBorder;
	float YMinBorder;
	float YTransformCoefficent;
	float YAddCoefficent;
	float XTransformCoefficent;
	float XAddCoefficent;
};
layout (std430,binding = 1) buffer WarpingPointStruct
{
	vec2 WarpingPoints[65536];
};
layout (std430,binding=2) buffer WarpRegionStruct
{
	ChildRegion WarpRegion[65536];
};
bool inRegion(vec2 vPoint,ChildRegion vRegion)
{
	return (
		vPoint.x >= vRegion.XMinBorder &&
		vPoint.y >= vRegion.YMinBorder &&
		vPoint.x <= vRegion.XMaxBorder &&
		vPoint.y <= vRegion.YMaxBorder
	);
}

void main(void)
{
    uint pointIdx = gl_WorkGroupID.x*256+gl_LocalInvocationID.x;
    vec2 WarpingPoint = WarpingPoints[pointIdx];
	uint GroupBegin = gl_WorkGroupID.x * 256;
	uint GroupEnd = GroupBegin + 256;
   for (uint i= GroupBegin; i< GroupEnd; i++)
   {
		if(inRegion(WarpingPoint,WarpRegion[i]))
	    {
			WarpingPoints[pointIdx].x = WarpRegion[i].XAddCoefficent + WarpRegion[i].XTransformCoefficent * WarpingPoint.x;
			WarpingPoints[pointIdx].y = WarpRegion[i].YAddCoefficent + WarpRegion[i].YTransformCoefficent * WarpingPoint.y;
			break;
		}
   }
}